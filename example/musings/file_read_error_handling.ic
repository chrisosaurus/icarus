
# a simple example representing reading a file into a vector

type Line
  number::Int
  content::String
end

fn read_file(file_name::String) -> Result<Vector<Line>>
    let &v = Vector<Line>()

    let &f::File = match File(file_name)
        case OK(x)
            yield x
        case Err(x)
            return Err(x)
    end

    # iter is Result<(contents number)>
    for iter in read_iterate_lines(&f)
        let (line count) = match iter
            case Ok(x)
                yield x
            case Err(x)
                return Err(x)
        end

        append(&v Line(count line))
    end

    # box our Vector up as a success and return
    # note we are boxing up an immutable reference
    return OK(v)
end

fn main(file_name::String)
    let results = match read_file(file_name)
        case Err(x)
            return Err(x)
        case Ok(x)
            yield x
    end

    for line in results
        print(line.number " : " line.contents)
    end

end

