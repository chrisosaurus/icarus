type Point
    x::Uint
    y::Uint
end

type Square
    topleft::Point
    width::Uint
end

type Rectangle
    topleft::Point
    bottomright::Point
end

type Circle
    center::Point
    radius::Uint
end

union Shape
    circle::Circle
    square::Square
    rectangle::Rectangle
end

fn generate_shape() -> Shape
    return Shape(Rectangle(Point(Uint(14), Uint(10)), Point(Uint(20), Uint(24))))
end

fn main()
    let s = generate_shape()
    println(s)
end

